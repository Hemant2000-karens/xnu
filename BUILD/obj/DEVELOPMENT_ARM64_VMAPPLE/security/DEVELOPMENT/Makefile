SOURCE_DIR=/Users/hemant/distribution-macOS/xnu
export CONFIG_DEFINES = -DINET -DMACH -DVLAN -DBOND -DIF_FAKE -DIF_HEADLESS -DIF_REDIRECT -DAH_ALL_CRYPTO -DPF -DPFLOG -DDUMMYNET -DTRAFFIC_MGT -DMULTICAST -DIFNET_INPUT_SANITY_CHK -DMULTIPATH -DMPTCP -DSYSV_SEM -DSYSV_MSG -DSYSV_SHM -DPSYNCH -DFLOW_DIVERT -DNECP -DCONTENT_FILTER -DPACKET_MANGLER -DREMOTE_VIF -DSKYWALK -DCONFIG_NEXUS_USER_PIPE -DCONFIG_NEXUS_KERNEL_PIPE -DCONFIG_NEXUS_MONITOR -DCONFIG_NEXUS_FLOWSWITCH -DCONFIG_NEXUS_NETIF -DKCTL_TEST -DSOCKETS -DSENDFILE -DNETWORKING -DCONFIG_IMAGEBOOT -DCONFIG_MBUF_JUMBO -DFIFO -DFDESC -DDEVFS -DNULLFS -DFS_COMPRESSION -DQUOTA -DNAMEDSTREAMS -DCONFIG_APPLEDOUBLE -DCONFIG_VOLFS -DCONFIG_IMGSRC_ACCESS -DCONFIG_TRIGGERS -DCONFIG_EXT_RESOLVER -DCONFIG_SEARCHFS -DCONFIG_MNT_SUID -DCONFIG_MNT_ROOTSNAP -DCONFIG_ROSV_STARTUP -DCONFIG_FIRMLINKS -DCONFIG_MOUNT_VM -DCONFIG_MOUNT_PREBOOTRECOVERY -DCONFIG_DATALESS_FILES -DCONFIG_BASESYSTEMROOT -DCONFIG_UNION_MOUNTS -DCONFIG_FILE_LEASES -DCONFIG_IOCOUNT_TRACE -DNFSSERVER -DCONFIG_NETBOOT -DIPSEC -DIPSEC_ESP -DCRYPTO -DCRYPTO_SHA2 -DENCRYPTED_SWAP -DCONFIG_IMG4 -DZLIB -DIF_BRIDGE -DCONFIG_KN_HASHSIZE="64" -DCONFIG_VNODES="263168" -DCONFIG_NC_HASH="4096" -DCONFIG_VFS_NAMES="4096" -DCONFIG_MAX_CLUSTERS="8" -DCONFIG_MIN_NBUF="256" -DCONFIG_MIN_NIOBUF="128" -DCONFIG_NMBCLUSTERS="((1024 * 512) / MCLBYTES)" -DCONFIG_TCBHASHSIZE="4096" -DCONFIG_AIO_MAX="90" -DCONFIG_AIO_PROCESS_MAX="16" -DCONFIG_AIO_THREAD_COUNT="4" -DCONFIG_MAXVIFS="32" -DCONFIG_MFCTBLSIZ="256" -DCONFIG_MSG_BSIZE_REL="131072" -DCONFIG_MSG_BSIZE_DEV="131072" -DCONFIG_MSG_BSIZE="CONFIG_MSG_BSIZE_DEV" -DCONFIG_IPC_TABLE_ENTRIES_SIZE_MAX="7340032" -DCONFIG_IPC_TABLE_REQUEST_SIZE_MAX="2097152" -DCONFIG_IPC_KERNEL_MAP_SIZE="64" -DCONFIG_PMAP_PPL -DCONFIG_DYNAMIC_CODE_SIGNING -DCONFIG_SECOND_STATIC_TRUST_CACHE -DCONFIG_SUPPLEMENTAL_SIGNATURES -DCONFIG_CODE_DECRYPTION -DCONFIG_PROTECT -DCONFIG_MEMORYSTATUS -DCONFIG_DEFERRED_RECLAIM -DCONFIG_PHYS_WRITE_ACCT -DVM_PRESSURE_EVENTS -DCONFIG_LEDGER_INTERVAL_MAX -DCONFIG_IOSCHED -DCONFIG_IO_ACCOUNTING -DIMPORTANCE_INHERITANCE -DIMPORTANCE_TRACE -DCONFIG_TELEMETRY -DCONFIG_PROC_UUID_POLICY -DCONFIG_ECC_LOGGING -DCONFIG_COREDUMP -DCONFIG_VNGUARD -DCONFIG_PV_TICKET -DIOKITCPP -DIOKITSTATS -DIOTRACKING -DCONFIG_SLEEP -DCONFIG_MAX_THREADS="500" -DNO_KERNEL_HID -DLIBKERNCPP -DCONFIG_BLOCKS -DCONFIG_KEC_FIPS -DCONFIG_PERSONAS -DCONFIG_MACF_SOCKET_SUBSET -DCONFIG_AUDIT -DCONFIG_ARCADE -DCONFIG_SETUID -DCONFIG_SECURE_BSD_ROOT -DCONFIG_KAS_INFO -DCONFIG_PROC_RESOURCE_LIMITS -DMACH_ASSERT -DCONFIG_ZLEAKS -DCONFIG_VOUCHER_DEPRECATED -DCONFIG_DTRACE -DLOCK_STATS -DKPERF -DCONFIG_IOTRACE -DPGO -DDEVELOPMENT -DMACH_BSD -DIOKIT -DCONFIG_THREAD_MAX="2560" -DCONFIG_TASK_MAX="1024" -DCONFIG_ZONE_MAP_MIN="120586240" -DCONFIG_VC_PROGRESS_WHITE -DCONFIG_SCHED_TIMESHARE_CORE -DCONFIG_CLUTCH -DCONFIG_SCHED_AUTO_JOIN -DCONFIG_SCHED_SFI -DCONFIG_PROB_GZALLOC -DCONFIG_SCHED_DEFERRED_AST -DCONFIG_PREADOPT_TG -DMACH_KDP -DCONFIG_SERIAL_KDP -DCONFIG_KDP_INTERACTIVE_DEBUGGING -DCONFIG_KDP_COREDUMP_ENCRYPTION -DCONFIG_TASKWATCH -DCONFIG_USER_NOTIFICATION -DCONFIG_XNUPOST -DPROC_REF_DEBUG -DCONFIG_ATM -DCONFIG_COALITIONS -DCONFIG_SYSDIAGNOSE -DCONFIG_CSR -DCONFIG_CSR_FROM_DT -DSERIAL_CONSOLE -DVIDEO_CONSOLE -DCONFIG_REQUIRES_U32_MUNGING -DCONFIG_MACH_BRIDGE_RECV_TIME -DCONFIG_QUIESCE_COUNTER -DCONFIG_ARM_PFZ -DCONFIG_DARKBOOT -DCONFIG_SERVICE_PORT_INFO -DCONFIG_DELAY_IDLE_SLEEP -DCONFIG_PROC_UDATA_STORAGE -DSCHED_HYGIENE_DEBUG -DCONFIG_DEBUG_SYSCALL_REJECTION -DCONFIG_EXT_PANICLOG -DCONFIG_TASK_SUSPEND_STATS -DCONFIG_BTI_TELEMETRY -DALTERNATE_DEBUGGER -DCONFIG_MACH_APPROXIMATE_TIME -DCONFIG_KERNEL_INTEGRITY -DCONFIG_MACF_LAZY_VNODE_LABELS -DCONFIG_HYPERVISOR_PUBLIC -DCONFIG_RESLIDE_SHARED_CACHE
OSFMK_MACHINE=arm64
#
# Mach Operating System
# Copyright (c) 1986 Carnegie-Mellon University
# All rights reserved.  The CMU software License Agreement specifies
# the terms and conditions for use and redistribution.
#

export MakeInc_cmd=${SRCROOT}/makedefs/MakeInc.cmd
export MakeInc_def=${SRCROOT}/makedefs/MakeInc.def
export MakeInc_rule=${SRCROOT}/makedefs/MakeInc.rule
export MakeInc_dir=${SRCROOT}/makedefs/MakeInc.dir

include $(MakeInc_cmd)
include $(MakeInc_def)

#
# XXX: CFLAGS
#
CFLAGS+= -include meta_features.h -DBSD_KERNEL_PRIVATE
SFLAGS+= -include meta_features.h

#
# INCFLAGS to include security prototypes
#
INCFLAGS_MAKEFILE= -I$(SOURCE)/..

#
# Directories for mig generated files
#
COMP_SUBDIRS =

#
#  Make sure we don't remove this by accident if interrupted at the wrong
#  time.
#
.PRECIOUS: Makefile

#
#  Theses macros are filled in by the config program depending on the
#  current configuration.  The MACHDEP macro is replaced by the
#  contents of the machine dependent makefile template and the others
#  are replaced by the corresponding symbol definitions for the
#  configuration.
#

OBJS=mac_audit.o mac_base.o mac_data.o mac_label.o mac_necp.o \
	mac_process.o mac_vfs.o mac_vfs_subr.o mac_skywalk.o \
	mac_system.o mac_sysv_sem.o mac_sysv_shm.o mac_sysv_msg.o \
	mac_posix_sem.o mac_posix_shm.o mac_socket.o mac_pipe.o \
	mac_iokit.o mac_file.o mac_priv.o mac_pty.o mac_kext.o \
	mac_mach.o 

LIBOBJS=

CFILES=\
	$(SOURCE_DIR)/security/mac_audit.c \
	$(SOURCE_DIR)/security/mac_base.c \
	$(SOURCE_DIR)/security/mac_data.c \
	$(SOURCE_DIR)/security/mac_label.c \
	$(SOURCE_DIR)/security/mac_necp.c \
	$(SOURCE_DIR)/security/mac_process.c \
	$(SOURCE_DIR)/security/mac_vfs.c \
	$(SOURCE_DIR)/security/mac_vfs_subr.c \
	$(SOURCE_DIR)/security/mac_skywalk.c \
	$(SOURCE_DIR)/security/mac_system.c \
	$(SOURCE_DIR)/security/mac_sysv_sem.c \
	$(SOURCE_DIR)/security/mac_sysv_shm.c \
	$(SOURCE_DIR)/security/mac_sysv_msg.c \
	$(SOURCE_DIR)/security/mac_posix_sem.c \
	$(SOURCE_DIR)/security/mac_posix_shm.c \
	$(SOURCE_DIR)/security/mac_socket.c \
	$(SOURCE_DIR)/security/mac_pipe.c \
	$(SOURCE_DIR)/security/mac_iokit.c \
	$(SOURCE_DIR)/security/mac_file.c \
	$(SOURCE_DIR)/security/mac_priv.c \
	$(SOURCE_DIR)/security/mac_pty.c \
	$(SOURCE_DIR)/security/mac_kext.c \
	$(SOURCE_DIR)/security/mac_mach.c 
COBJS=mac_audit.o mac_base.o mac_data.o mac_label.o mac_necp.o \
	mac_process.o mac_vfs.o mac_vfs_subr.o mac_skywalk.o \
	mac_system.o mac_sysv_sem.o mac_sysv_shm.o mac_sysv_msg.o \
	mac_posix_sem.o mac_posix_shm.o mac_socket.o mac_pipe.o \
	mac_iokit.o mac_file.o mac_priv.o mac_pty.o mac_kext.o \
	mac_mach.o 

CXXFILES=
CXXOBJS=

SFILES=
SOBJS=

######################################################################
#BEGIN	Machine dependent Makefile fragment for arm
######################################################################

######################################################################
#END	Machine dependent Makefile fragment for arm
######################################################################

#
# Diagnostic opt-outs.  We need to make this list empty.
#
# DO NOT ADD MORE HERE.
#
# -Wno-cast-align
mac_base.o_CWARNFLAGS_ADD += -Wno-cast-align
# -Wno-shorten-64-to-32
mac_audit.o_CWARNFLAGS_ADD += -Wno-shorten-64-to-32
mac_base.o_CWARNFLAGS_ADD += -Wno-shorten-64-to-32
mac_process.o_CWARNFLAGS_ADD += -Wno-shorten-64-to-32
# -Wno-sign-conversion
mac_base.o_CWARNFLAGS_ADD += -Wno-sign-conversion
mac_mach.o_CWARNFLAGS_ADD += -Wno-sign-conversion
mac_vfs.o_CWARNFLAGS_ADD += -Wno-sign-conversion
mac_vfs_subr.o_CWARNFLAGS_ADD += -Wno-sign-conversion

# Rebuild if per-file overrides change
${OBJS}: $(firstword $(MAKEFILE_LIST))

# Rebuild if global compile flags change
$(COBJS): .CFLAGS
.CFLAGS: ALWAYS
	$(_v)$(REPLACECONTENTS) $@ $(KCC) $(CFLAGS) $(INCFLAGS)
$(CXXOBJS): .CXXFLAGS
.CXXFLAGS: ALWAYS
	$(_v)$(REPLACECONTENTS) $@ $(KC++) $(CXXFLAGS) $(INCFLAGS)
$(SOBJS): .SFLAGS
.SFLAGS: ALWAYS
	$(_v)$(REPLACECONTENTS) $@ $(S_KCC) $(SFLAGS) $(INCFLAGS)

$(COMPONENT).filelist: $(OBJS)
	@$(LOG_LDFILELIST) "$(COMPONENT)"
	$(_v)for obj in ${OBJS}; do	\
		 $(ECHO) $(TARGET)/$(CURRENT_KERNEL_CONFIG)/$${obj}; \
	done > $(COMPONENT).filelist

$(COMPONENT).libfilelist: $(LIBOBJS)
	@$(LOG_LDFILELIST) "lib$(COMPONENT)"
	$(_v)for obj in ${LIBOBJS}; do	\
		 $(ECHO) $(TARGET)/$(CURRENT_KERNEL_CONFIG)/$${obj}; \
	done > $(COMPONENT).libfilelist

ifeq ($(RC_ProjectName),xnu_libraries)
do_all: $(COMPONENT).libfilelist
else
do_all: $(COMPONENT).filelist
endif

do_build_all:: do_all

-include mac_audit.d
mac_audit.o: $(SOURCE_DIR)/security/mac_audit.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_base.d
mac_base.o: $(SOURCE_DIR)/security/mac_base.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_data.d
mac_data.o: $(SOURCE_DIR)/security/mac_data.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_label.d
mac_label.o: $(SOURCE_DIR)/security/mac_label.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_necp.d
mac_necp.o: $(SOURCE_DIR)/security/mac_necp.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_process.d
mac_process.o: $(SOURCE_DIR)/security/mac_process.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_vfs.d
mac_vfs.o: $(SOURCE_DIR)/security/mac_vfs.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_vfs_subr.d
mac_vfs_subr.o: $(SOURCE_DIR)/security/mac_vfs_subr.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_skywalk.d
mac_skywalk.o: $(SOURCE_DIR)/security/mac_skywalk.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_system.d
mac_system.o: $(SOURCE_DIR)/security/mac_system.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_sysv_sem.d
mac_sysv_sem.o: $(SOURCE_DIR)/security/mac_sysv_sem.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_sysv_shm.d
mac_sysv_shm.o: $(SOURCE_DIR)/security/mac_sysv_shm.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_sysv_msg.d
mac_sysv_msg.o: $(SOURCE_DIR)/security/mac_sysv_msg.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_posix_sem.d
mac_posix_sem.o: $(SOURCE_DIR)/security/mac_posix_sem.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_posix_shm.d
mac_posix_shm.o: $(SOURCE_DIR)/security/mac_posix_shm.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_socket.d
mac_socket.o: $(SOURCE_DIR)/security/mac_socket.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_pipe.d
mac_pipe.o: $(SOURCE_DIR)/security/mac_pipe.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_iokit.d
mac_iokit.o: $(SOURCE_DIR)/security/mac_iokit.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_file.d
mac_file.o: $(SOURCE_DIR)/security/mac_file.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_priv.d
mac_priv.o: $(SOURCE_DIR)/security/mac_priv.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_pty.d
mac_pty.o: $(SOURCE_DIR)/security/mac_pty.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_kext.d
mac_kext.o: $(SOURCE_DIR)/security/mac_kext.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})
-include mac_mach.d
mac_mach.o: $(SOURCE_DIR)/security/mac_mach.c
	${C_RULE_0}
	${C_RULE_1A} $(SOURCE_DIR)/security/${C_RULE_1B}
	${C_RULE_2}
	${C_RULE_3}
	$(if ${C_RULE_4A},${C_RULE_4A}$(SOURCE_DIR)/security/${C_RULE_4B})

include $(MakeInc_rule)
include $(MakeInc_dir)
