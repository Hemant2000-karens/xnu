# This file declares the list of source files that should be exempt from
# AddressSanitizer instrumentation. Usually, this is because a file is used by
# the AddressSanitizer runtime itself, or because the code executes before
# the runtime has been initialized.

[.*]

# Blanket ignore non-sanitized functions
fun:__nosan_*

# Try really hard to avoid panicing while debugging
src:/Users/hemant/distribution-macOS/xnu/osfmk/kdp/*
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/debug.c

[kernel-hwaddress|address]

# Exclude linker sets
type:struct linker_set_entry
type:linker_set_entry
type:struct startup_entry
type:startup_entry
type:struct kalloc_type_view
type:struct kernel_brk_descriptor
type:kernel_brk_descriptor

# Exclude per-cpu data structures the assembly accesses
type:vm_statistics64
type:struct vm_statistics64
type:vm_statistics64_data_t
type:struct processor
type:processor

# Exclude KASan itself
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan-fakestack.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan-x86_64.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan-memintrinsics.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan_dynamic_blacklist.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan-classic.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan-tbi.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan-helper.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/kasan-report.c

# Exclude other sanitizers
src:/Users/hemant/distribution-macOS/xnu/san/coverage/kcov.c
src:/Users/hemant/distribution-macOS/xnu/san/coverage/kcov_ksancov.c
src:/Users/hemant/distribution-macOS/xnu/san/coverage/kcov_stksz.c

# Exclude dtrace function that does weird stack manipulations
fun:fbt_perfCallback

# Exclude leak detection code that reads all memory
fun:_ZL18IOTrackingLeakScanPv

# Exclude KASAN dependencies
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/btlog.c
# XXX: could this be relaxed since fakestack is reentrant?
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/zalloc.c
[.*]
src:/Users/hemant/distribution-macOS/xnu/san/memory/ubsan.c
src:/Users/hemant/distribution-macOS/xnu/san/memory/ubsan_log.c

[bounds]
src:/Users/hemant/distribution-macOS/xnu/osfmk/corecrypto/*

[alignment]

src:/Users/hemant/distribution-macOS/xnu/libsa/bootstrap.cpp
src:/Users/hemant/distribution-macOS/xnu/bsd/net/necp_client.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/arm/pe_identify_machine.c

[object-size]
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/locks_i386.c


[signed-integer-overflow]

# rdar://77997115&rdar://78024928
src:/Users/hemant/distribution-macOS/xnu/osfmk/console/video_console.c

# rdar://77999724
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/ledger.c

# rdar://78030612
fun:memorystatus_cmd_get_memlimit_excess_np

# rdar://79501524
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/clock.c

# rdar://80254468
fun:wait4_nocancel

# rdar://79446799 (only the biggest offender, tcp_xmit_timer)
fun:tcp_xmit_timer
# x86_64 specific blacklist

[address]

# Early boot AUTOGEN
src:/Users/hemant/distribution-macOS/xnu/bsd/kern/kdebug.c
src:/Users/hemant/distribution-macOS/xnu/bsd/kern/kern_csr.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/corecrypto/cc_clear.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/corecrypto/ccdrbg_nisthmac.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/device/subrs.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/Diagnostics.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/acpi.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/cpu.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/i386_init.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/locks_i386.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/locks_i386_opt.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/machine_routines.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/mp.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/mtrr.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/pal_routines.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/panic_hooks.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/rtclock.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/vmx/vmx_cpu.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/lock_mtx.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/locks.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/prng/prng_random.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/x86_64/loose_ends.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/gen/bootargs.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/gen/device_tree.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/gen/pe_gen.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/i386/pe_bootargs.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/i386/pe_identify_machine.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/i386/pe_init.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/i386/pe_serial.c
# added by hand
src:/Users/hemant/distribution-macOS/xnu/osfmk/mach/dyld_kernel_fixups.h

# Nothing below is needed before kasan init, so most of it should go away.
src:/Users/hemant/distribution-macOS/xnu/osfmk/corecrypto/*.c
src:/Users/hemant/distribution-macOS/xnu/pexpert/*
src:/Users/hemant/distribution-macOS/xnu/osfmk/console/video_console.c
src:/Users/hemant/distribution-macOS/xnu/bsd/dev/unix_startup.c
src:/Users/hemant/distribution-macOS/xnu/bsd/kern/subr_xxx.c
src:/Users/hemant/distribution-macOS/xnu/iokit/Kernel/IOHibernateRestoreKernel.c
src:/Users/hemant/distribution-macOS/xnu/iokit/Kernel/IOStringFuncs.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kdp/kdp_udp.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/hibernate.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/startup.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/timer_call.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/printf.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kdp/ml/i386/kdp_x86_common.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/kdp/ml/x86_64/kdp_machdep.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/x86_64/boot_pt.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/x86_64/loose_ends.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/x86_64/pmap.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/x86_64/pmap_pcid.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/AT386/model_dep.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/cpuid.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/gdt.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/hibernate_i386.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/hibernate_restore.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/i386_vm_init.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/machine_check.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/machine_routines.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/mp_desc.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/pmap_common.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/pmap_x86_common.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/pmCPU.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/lapic_native.c
src:/Users/hemant/distribution-macOS/xnu/osfmk/vm/vm_compressor.c
fun:doublemap_init
fun:getsegbynamefromheader
fun:getsectbynamefromheader
fun:getsectbynamefromseg

src:/Users/hemant/distribution-macOS/xnu/osfmk/i386/*.h
src:/Users/hemant/distribution-macOS/xnu/EXTERNAL_HEADERS/corecrypto/*.h
src:/Users/hemant/distribution-macOS/xnu/osfmk/corecrypto/*.h
src:/Users/hemant/distribution-macOS/xnu/osfmk/kern/queue.h
src:*/libkern/libkern/*.h

